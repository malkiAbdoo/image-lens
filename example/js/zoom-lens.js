!function(Q,U){"object"==typeof exports&&"object"==typeof module?module.exports=U():"function"==typeof define&&define.amd?define([],U):"object"==typeof exports?exports["zoom-lens"]=U():Q["zoom-lens"]=U()}(self,(()=>(()=>{"use strict";var __webpack_modules__={607:(__unused_webpack_module,exports,__webpack_require__)=>{eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst lens_resize_1 = __webpack_require__(48);\r\nconst zoom_window_1 = __webpack_require__(577);\r\nclass zoomLens {\r\n    constructor(image, options = {}) {\r\n        this._lens = {};\r\n        const body = document.body;\r\n        const lens = document.createElement('div');\r\n        const originZoom = (options.originZoom || false) && !options.zoomWindow;\r\n        const background = `url(${image.src}) no-repeat`;\r\n        lens.style.position = originZoom ? 'absolute' : 'fixed';\r\n        lens.style.pointerEvents = 'none';\r\n        lens.style.zIndex = '999';\r\n        lens.classList.add(options.className || 'zoom-lens');\r\n        this._image = image;\r\n        this._lens.div = lens;\r\n        this._lens.origin = originZoom;\r\n        body.appendChild(lens);\r\n        const lensStyle = window.getComputedStyle(lens);\r\n        if (originZoom) {\r\n            options.lensWidth = 100;\r\n            options.lensHeight = 100;\r\n        }\r\n        (0, lens_resize_1.resize)(this._lens.div, this._image, options.lensWidth || options.lensHeight || null, options.lensHeight || null);\r\n        if (options.zoomWindow) {\r\n            this._lens.window = (0, zoom_window_1.createZoomWindow)(this._lens.div, this._image);\r\n            this._lens.window.style.background = background;\r\n            if (lensStyle.backgroundColor == 'rgba(0, 0, 0, 0)') {\r\n                lens.style.background = '#FFF6';\r\n            }\r\n            const windowRect = this._lens.window.getBoundingClientRect();\r\n            const lensRect = this._lens.div.getBoundingClientRect();\r\n            this._lens.zoomRatio = windowRect.width / lensRect.width;\r\n            this._lens.zoomRect = {\r\n                width: lensRect.width,\r\n                height: lensRect.height\r\n            };\r\n        }\r\n        else {\r\n            this.zoom(options.zoomRatio || 2);\r\n            lens.style.background = background;\r\n        }\r\n        this.hide();\r\n        this.setBgSize();\r\n        image.addEventListener('mousemove', e => this.updateOnMove(e));\r\n        image.addEventListener('mouseenter', () => this.show());\r\n        image.addEventListener('mouseleave', () => this.hide());\r\n        window.addEventListener('scroll', () => this.updateOnScroll());\r\n        window.addEventListener('resize', () => this.setBgSize());\r\n    }\r\n    setBgSize() {\r\n        const lens = this._lens.window ? this._lens.window : this._lens.div;\r\n        const ratio = this._lens.zoomRatio;\r\n        const bgw = this._image.width * ratio;\r\n        const bgh = this._image.height * ratio;\r\n        this._lens.div.style.top = this._image.offsetTop + 'px';\r\n        this._lens.div.style.left = this._image.offsetLeft + 'px';\r\n        if (this._lens.origin) {\r\n            lens.style.width = this._image.width + 'px';\r\n            lens.style.height = this._image.height + 'px';\r\n            this.zoom(ratio);\r\n        }\r\n        lens.style.backgroundSize = bgw + 'px ' + bgh + 'px';\r\n    }\r\n    setBgPosition(x, y) {\r\n        const lens = this._lens.window ? this._lens.window : this._lens.div;\r\n        lens.style.backgroundPosition = '-' + x + 'px -' + y + 'px';\r\n    }\r\n    updateOnScroll() {\r\n        const prevPos = this._lens.prevPosition;\r\n        if (prevPos == null)\r\n            return;\r\n        const ratio = this._lens.zoomRatio;\r\n        const zoomRect = this._lens.zoomRect;\r\n        const scrollX = window.scrollX - prevPos.sx;\r\n        const scrollY = window.scrollY - prevPos.sy;\r\n        let x = prevPos.px + scrollX;\r\n        let y = prevPos.py + scrollY;\r\n        const maxX = this._image.width - zoomRect.width;\r\n        const maxY = this._image.height - zoomRect.height;\r\n        if (x <= 0)\r\n            x = 0;\r\n        else if (x >= maxX)\r\n            x = maxX;\r\n        if (y <= 0)\r\n            y = 0;\r\n        else if (y >= maxY)\r\n            y = maxY;\r\n        this.setBgPosition(x * ratio, y * ratio);\r\n    }\r\n    updateOnMove(event) {\r\n        const origin = this._lens.origin;\r\n        const posX = event.pageX - (origin ? 0 : window.scrollX);\r\n        const posY = event.pageY - (origin ? 0 : window.scrollY);\r\n        const zoomRect = this._lens.zoomRect;\r\n        const imageRect = this._image.getBoundingClientRect();\r\n        const lensRect = this._lens.div.getBoundingClientRect();\r\n        const ratio = this._lens.zoomRatio;\r\n        let x = posX - imageRect.left - zoomRect.width / 2;\r\n        let y = posY - imageRect.top - zoomRect.height / 2;\r\n        let maxX = imageRect.width - zoomRect.width;\r\n        let maxY = imageRect.height - zoomRect.height;\r\n        if (x <= 0)\r\n            x = 0;\r\n        else if (x >= maxX)\r\n            x = maxX;\r\n        if (y <= 0)\r\n            y = 0;\r\n        else if (y >= maxY)\r\n            y = maxY;\r\n        this.setBgPosition(x * ratio, y * ratio);\r\n        maxX = imageRect.width - lensRect.width;\r\n        maxY = imageRect.height - lensRect.height;\r\n        let lensX = x + zoomRect.width / 2 - lensRect.width / 2;\r\n        let lensY = y + zoomRect.height / 2 - lensRect.height / 2;\r\n        if (lensX <= 0)\r\n            lensX = 0;\r\n        else if (lensX >= maxX)\r\n            lensX = maxX;\r\n        if (lensY <= 0)\r\n            lensY = 0;\r\n        else if (lensY >= maxY)\r\n            lensY = maxY;\r\n        this._lens.prevPosition = {\r\n            px: x,\r\n            py: y,\r\n            sx: window.scrollX,\r\n            sy: window.scrollY\r\n        };\r\n        if (!this._lens.origin) {\r\n            this._lens.div.style.left = lensX + imageRect.left + 'px';\r\n            this._lens.div.style.top = lensY + imageRect.top + 'px';\r\n        }\r\n    }\r\n    zoom(ratio) {\r\n        if (this._lens.window)\r\n            return;\r\n        const rect = this._lens.div.getBoundingClientRect();\r\n        this._lens.zoomRatio = ratio <= 0 ? 0.01 : ratio;\r\n        ratio = this._lens.zoomRatio;\r\n        this._lens.zoomRect = {\r\n            width: rect.width / ratio,\r\n            height: rect.height / ratio\r\n        };\r\n        this.updateOnScroll();\r\n    }\r\n    setLensSize(width, height = 0) {\r\n        if (!width || this._lens.origin)\r\n            return;\r\n        const zoomWindow = this._lens.window;\r\n        const ratio = zoomWindow ? 1 : this._lens.zoomRatio;\r\n        const lens = this._lens.div;\r\n        const image = this._image;\r\n        (0, lens_resize_1.resize)(lens, image, width, height);\r\n        const lensRect = lens.getBoundingClientRect();\r\n        if (zoomWindow) {\r\n            const windowWidth = window.getComputedStyle(zoomWindow).width;\r\n            zoomWindow.style.aspectRatio = lensRect.width + '/' + lensRect.height;\r\n            this._lens.zoomRatio = +windowWidth.replace('px', '') / lensRect.width;\r\n        }\r\n        this._lens.zoomRect = {\r\n            width: lensRect.width / ratio,\r\n            height: lensRect.height / ratio\r\n        };\r\n        this.setBgSize();\r\n    }\r\n    show() {\r\n        this._lens.div.style.zIndex = '999';\r\n        if (this._lens.window)\r\n            this._lens.window.style.display = 'block';\r\n    }\r\n    hide() {\r\n        this._lens.div.style.zIndex = '-1';\r\n        if (this._lens.window)\r\n            this._lens.window.style.display = 'none';\r\n    }\r\n    remove() {\r\n        this._lens.div.remove();\r\n        if (this._lens.window)\r\n            this._lens.window.remove();\r\n    }\r\n}\r\nexports[\"default\"] = zoomLens;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///607\n")},48:(__unused_webpack_module,exports)=>{eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.resize = void 0;\r\nfunction resize(ele, img, w, h) {\r\n    w = w || 20;\r\n    h = h || w;\r\n    const width = (w > 100 ? 100 : w) || 20;\r\n    const height = (h > 100 ? 100 : h) || w;\r\n    ele.style.width = (img.width * width) / 100 + 'px';\r\n    ele.style.height = (img.height * height) / 100 + 'px';\r\n}\r\nexports.resize = resize;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDguanMiLCJtYXBwaW5ncyI6Ijs7O0FBRUEsU0FBZ0IsTUFBTSxDQUFDLEdBQVEsRUFBRSxHQUFRLEVBQUUsQ0FBZ0IsRUFBRSxDQUFnQjtJQUMzRSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNaLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ1gsTUFBTSxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN4QyxNQUFNLE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hDLEdBQUcsQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLENBQUMsR0FBRyxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDO0lBQ25ELEdBQUcsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDO0FBQ3hELENBQUM7QUFQRCx3QkFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL3pvb20tbGVucy8uL3NyYy9zY3JpcHRzL2xlbnMtcmVzaXplLnRzPzJjNmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW1nLCBEaXYgfSBmcm9tICcuLi90eXBlcyc7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcmVzaXplKGVsZTogRGl2LCBpbWc6IEltZywgdzogbnVtYmVyIHwgbnVsbCwgaDogbnVtYmVyIHwgbnVsbCkge1xyXG4gIHcgPSB3IHx8IDIwO1xyXG4gIGggPSBoIHx8IHc7XHJcbiAgY29uc3Qgd2lkdGggPSAodyA+IDEwMCA/IDEwMCA6IHcpIHx8IDIwO1xyXG4gIGNvbnN0IGhlaWdodCA9IChoID4gMTAwID8gMTAwIDogaCkgfHwgdztcclxuICBlbGUuc3R5bGUud2lkdGggPSAoaW1nLndpZHRoICogd2lkdGgpIC8gMTAwICsgJ3B4JztcclxuICBlbGUuc3R5bGUuaGVpZ2h0ID0gKGltZy5oZWlnaHQgKiBoZWlnaHQpIC8gMTAwICsgJ3B4JztcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///48\n")},577:(__unused_webpack_module,exports)=>{eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.createZoomWindow = void 0;\r\nfunction createZoomWindow(lens, image) {\r\n    const zoomWindow = document.createElement('div');\r\n    const lensRect = lens.getBoundingClientRect();\r\n    zoomWindow.classList.add('zoom-window');\r\n    document.body.appendChild(zoomWindow);\r\n    zoomWindow.style.position = 'absolute';\r\n    zoomWindow.style.pointerEvents = 'none';\r\n    zoomWindow.style.aspectRatio = lensRect.width + '/' + lensRect.height;\r\n    const rect = zoomWindow.getBoundingClientRect();\r\n    if (rect.width == 0) {\r\n        zoomWindow.style.top = image.offsetTop + 'px';\r\n        zoomWindow.style.left = image.offsetLeft + image.width + 10 + 'px';\r\n        zoomWindow.style.width = image.width / 2 + 'px';\r\n    }\r\n    return zoomWindow;\r\n}\r\nexports.createZoomWindow = createZoomWindow;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTc3LmpzIiwibWFwcGluZ3MiOiI7OztBQUVBLFNBQWdCLGdCQUFnQixDQUFDLElBQW9CLEVBQUUsS0FBVTtJQUMvRCxNQUFNLFVBQVUsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2pELE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO0lBQzlDLFVBQVUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ3hDLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3RDLFVBQVUsQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLFVBQVUsQ0FBQztJQUN2QyxVQUFVLENBQUMsS0FBSyxDQUFDLGFBQWEsR0FBRyxNQUFNLENBQUM7SUFDeEMsVUFBVSxDQUFDLEtBQUssQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDLEtBQUssR0FBRyxHQUFHLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQztJQUV0RSxNQUFNLElBQUksR0FBRyxVQUFVLENBQUMscUJBQXFCLEVBQUUsQ0FBQztJQUNoRCxJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksQ0FBQyxFQUFFO1FBQ25CLFVBQVUsQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHLEtBQUssQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQzlDLFVBQVUsQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDLEtBQUssR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBQ25FLFVBQVUsQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxLQUFLLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQztLQUNqRDtJQUVELE9BQU8sVUFBVSxDQUFDO0FBQ3BCLENBQUM7QUFqQkQsNENBaUJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vem9vbS1sZW5zLy4vc3JjL3NjcmlwdHMvem9vbS13aW5kb3cudHM/ZTEyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbWcgfSBmcm9tICcuLi90eXBlcyc7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlWm9vbVdpbmRvdyhsZW5zOiBIVE1MRGl2RWxlbWVudCwgaW1hZ2U6IEltZykge1xyXG4gIGNvbnN0IHpvb21XaW5kb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICBjb25zdCBsZW5zUmVjdCA9IGxlbnMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgem9vbVdpbmRvdy5jbGFzc0xpc3QuYWRkKCd6b29tLXdpbmRvdycpO1xyXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoem9vbVdpbmRvdyk7XHJcbiAgem9vbVdpbmRvdy5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XHJcbiAgem9vbVdpbmRvdy5zdHlsZS5wb2ludGVyRXZlbnRzID0gJ25vbmUnO1xyXG4gIHpvb21XaW5kb3cuc3R5bGUuYXNwZWN0UmF0aW8gPSBsZW5zUmVjdC53aWR0aCArICcvJyArIGxlbnNSZWN0LmhlaWdodDtcclxuXHJcbiAgY29uc3QgcmVjdCA9IHpvb21XaW5kb3cuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgaWYgKHJlY3Qud2lkdGggPT0gMCkge1xyXG4gICAgem9vbVdpbmRvdy5zdHlsZS50b3AgPSBpbWFnZS5vZmZzZXRUb3AgKyAncHgnO1xyXG4gICAgem9vbVdpbmRvdy5zdHlsZS5sZWZ0ID0gaW1hZ2Uub2Zmc2V0TGVmdCArIGltYWdlLndpZHRoICsgMTAgKyAncHgnO1xyXG4gICAgem9vbVdpbmRvdy5zdHlsZS53aWR0aCA9IGltYWdlLndpZHRoIC8gMiArICdweCc7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gem9vbVdpbmRvdztcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///577\n")}},__webpack_module_cache__={};function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](F,F.exports,__webpack_require__),F.exports}var __webpack_exports__=__webpack_require__(607);return __webpack_exports__})()));